We need to store info:  users, comments, likes, hashtags, photos, followers or followees.

CREATE TABLE users(id INT PRIMARY KEY AUTO_INCREMENT, user_name VARCHAR(255) UNIQUE NOT NULL , created_at timestamp DEFAULT NOW() );

CREATE TABLE photos(
	id INT PRIMARY KEY AUTO_INCREMENT,
	image_url  VARCHAR(255) NOT NULL,
	user_id INT NOT NULL,
	created_at timestamp DEFAULT NOW(),
	FOREIGN KEY(user_id) references users(id)
);

CREATE TABLE comments (
    id INTEGER AUTO_INCREMENT PRIMARY KEY,
    comment_text VARCHAR(255) NOT NULL,
    photo_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY(photo_id) REFERENCES photos(id),
    FOREIGN KEY(user_id) REFERENCES users(id)
);

for this table we have primary key with two values. Now we want a particular person to like only once i,e only one user_id, photo_id combination . it can be donw as
CREATE TABLE likes (
    user_id INTEGER NOT NULL,
    photo_id INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY(user_id) REFERENCES users(id),
    FOREIGN KEY(photo_id) REFERENCES photos(id),
    PRIMARY KEY(user_id, photo_id)
);

CREATE TABLE follows (
    follower_id INTEGER NOT NULL,
    followee_id INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY(follower_id) REFERENCES users(id),
    FOREIGN KEY(followee_id) REFERENCES users(id),
    PRIMARY KEY(follower_id, followee_id)
);



for hashtags:

consists of the different tags that are ever created.
CREATE TABLE tags (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  tag_name VARCHAR(255) UNIQUE,
  created_at TIMESTAMP DEFAULT NOW()
);

consists of relation bw photo tag and photo with which tag is associated.

CREATE TABLE photo_tags (
    photo_id INTEGER NOT NULL,
    tag_id INTEGER NOT NULL,
    FOREIGN KEY(photo_id) REFERENCES photos(id),
    FOREIGN KEY(tag_id) REFERENCES tags(id),
    PRIMARY KEY(photo_id, tag_id)
);
